#version 450

layout (local_size_x = 32) in;

struct RenderableInfo
{
    uint meshID;
    uint objectID;
};

struct DrawCommand
{
    uint indexCount;
    uint instanceCount;
    uint firstIndex;
    int  vertexOffset;
    uint firstInstance;
};

// GPU only - B
layout(set=0, binding=0) buffer readonly ssbo_0 
{
    RenderableInfo data[];
} visibleRenderables;

// GPU only - E
layout(set=0, binding=1) buffer ssbo_1
{
    uint data;
} instanceCount;

// GPU only - F
layout(set=0, binding=2) buffer ssbo_2
{
    uint data[];
} meshActive;

// Buffer pool - D
layout(set=0, binding=3) buffer ssbo_3
{
    DrawCommand data[];
}  drawCommands; 

bool isVisible()
{
    return true;
}

void main()
{
    uint renderableID = gl_GlobalInvocationID.x;
    RenderableInfo renderableInfo = visibleRenderables.data[renderableID];

    if (atomicCompSwap(meshActive.data[renderableInfo.meshID], 0, 1) != 0)
    {
        DrawCommand drawCmd = drawCommands.data[renderableInfo.meshID];
        uint firstInstance = atomicAdd(instanceCount.data, drawCmd.instanceCount);
        drawCommands.data[renderableInfo.meshID].firstInstance = firstInstance;
    }
}