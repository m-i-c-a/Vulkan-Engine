#version 450

layout (local_size_x = 32) in;

struct RenderableInfo
{
    uint meshID;
    uint objID;
};

// READ

layout(set=0, binding=0) buffer readonly ssbo_0 
{
    RenderableInfo data[];
} ssbo_loadedRenderableInfos;

// WRITE

layout(set=0, binding=1) buffer ssbo_1
{
    uint data[];
} ssbo_meshInstanceCount; 

layout(set=0, binding=2) buffer ssbo_2
{
    uint x, y, z;
    uint meshIDs[];  // array of active mesh ids (packed)
} ssbo_activeMesh;

layout(set=0, binding=3) buffer writeonly ssbo_3
{
    uint data[];
} ssbo_meshToCommandMapping;

layout(set=0, binding=4) buffer writeonly ssbo_4 
{
    uint x, y, z;
    RenderableInfo infos[];
} ssbo_visibleRenderables;

layout(push_constant) uniform push_const
{
    uint loadedRenderableCount;
} pc;


bool isVisible();
void populateRenderableInfo(in uint innvocID, inout uint meshID, inout uint objID);

void main()
{
    if (gl_GlobalInvocationID.x >= pc.loadedRenderableCount)
        return;

    if (gl_GlobalInvocationID.x == 0)
    {
        ssbo_visibleRenderables.y = 1;
        ssbo_visibleRenderables.z = 1;
        ssbo_activeMesh.y = 1;
        ssbo_activeMesh.z = 1;
    }

    uint meshID = 0;
    uint objID  = 0;
    populateRenderableInfo(gl_GlobalInvocationID.x, meshID, objID);

    if (isVisible())
    {
        if (atomicAdd(ssbo_meshInstanceCount.data[meshID], 1) == 0)
        {
            // STATE - Active innvocation is the first innvocation to have meshID
            uint activeMeshID = atomicAdd(ssbo_activeMesh.x, 1);
            ssbo_activeMesh.meshIDs[activeMeshID] = meshID;

            // activeMeshID is also the commandID
            ssbo_meshToCommandMapping.data[meshID] = activeMeshID;
        }

        uint visibleID = atomicAdd(ssbo_visibleRenderables.x, 1);
        ssbo_visibleRenderables.infos[visibleID].meshID = meshID;
        ssbo_visibleRenderables.infos[visibleID].objID  = objID;
    }
}

bool isVisible()
{
    return true;
}

void populateRenderableInfo(in uint innvocID, inout uint meshID, inout uint objID)
{
    RenderableInfo info = ssbo_loadedRenderableInfos.data[innvocID];
    meshID = info.meshID;
    objID  = info.objID;
}